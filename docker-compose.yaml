services:
  notifications-service:
    build: ./notifications-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/notifications_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL-AUTO=update
      - SPRING_PROFILES_ACTIVE=dev
    depends_on:
      postgres:
        condition: service_healthy
    # volumes:
      # - ./notifications-service:/app  # Remove in production

  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: notifications_db
    ports:
      # Exposed for external tools
      - "5432:5432"  
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      # Access pgAdmin at http://localhost:5050
      - "5050:80"  
    depends_on:
      - postgres
  # New Angular app service
  angular-app:
    build:
      context: ./myCampus-app
      dockerfile: Dockerfile
    ports:
      - "4200:80"  # Map port 80 from container to 4200 on host
    restart: unless-stopped
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "MyStr0ngPassword@"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    volumes:
      - mssql-data:/var/opt/mssql
    user: "mssql"  # Explicitly set the user
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P MyStr0ngPassword@ -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
volumes:
  postgres-data:
  mssql-data: